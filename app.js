const STORAGE_KEY='dailyFlameTracker';const DEFAULT_GOALS=['Java theory & project','Coding','Health','Water (5L)','Sleep (6h)'];let state={data:{},view:{year:new Date().getFullYear(),month:new Date().getMonth()}};const $=s=>document.querySelector(s);function load(){try{state.data=JSON.parse(localStorage.getItem(STORAGE_KEY))?.data||{}}catch(e){state.data={}}}function save(){localStorage.setItem(STORAGE_KEY,JSON.stringify({data:state.data}))}function key(d){return d.toISOString().slice(0,10)}function getDay(k){if(!state.data[k])state.data[k]={goals:[...DEFAULT_GOALS],progress:Array(5).fill(0)};return state.data[k]}function avg(a){return Math.round(a.reduce((x,y)=>x+ +y,0)/a.length)}function cls(p){if(p<=0)return'empty';if(p<15)return'vlow';if(p<40)return'low';if(p<70)return'mid';return'high'}function render(){const g=$('#grid');g.innerHTML='';const y=state.view.year,m=state.view.month,f=new Date(y,m,1),l=new Date(y,m+1,0);$('#monthLabel').textContent=f.toLocaleString('default',{month:'long',year:'numeric'});for(let i=0;i<f.getDay();i++)g.appendChild(document.createElement('div'));for(let d=1;d<=l.getDate();d++){const date=new Date(y,m,d),k=key(date),day=getDay(k),p=avg(day.progress);const el=document.createElement('div');el.className='day';el.innerHTML=`<div class=date-num>${d}</div><div class="flame ${cls(p)}" data-k="${k}">🔥</div><div>${p}%</div>`;el.querySelector('.flame').onclick=()=>openModal(k);g.appendChild(el)}}const modal=$('#dayModal'),title=$('#modalDateTitle'),goalsList=$('#goalsList'),progressList=$('#progressList'),dayP=$('#dayPercent');let cur=null;function openModal(k){cur=k;const d=new Date(k+'T00:00');title.textContent=d.toDateString();const x=getDay(k);goalsList.innerHTML='';x.goals.forEach((g,i)=>{const r=document.createElement('div');r.innerHTML=`<input value="${g}"> <button>❌</button>`;r.querySelector('input').oninput=e=>{x.goals[i]=e.target.value};r.querySelector('button').onclick=()=>{x.goals.splice(i,1);x.progress.splice(i,1);openModal(k)};goalsList.appendChild(r)});progressList.innerHTML='';x.goals.forEach((g,i)=>{const r=document.createElement('div');r.innerHTML=`${g}: <input type=range min=0 max=100 value=${x.progress[i]||0}> <span>${x.progress[i]||0}%</span>`;const rng=r.querySelector('input'),sp=r.querySelector('span');rng.oninput=e=>{x.progress[i]=+e.target.value;sp.textContent=x.progress[i]+'%';dayP.textContent=avg(x.progress)+'%';render()};progressList.appendChild(r)});dayP.textContent=avg(x.progress)+'%';modal.classList.remove('hidden')}$('#closeModal').onclick=()=>modal.classList.add('hidden');$('#addGoalBtn').onclick=()=>{if(!cur)return;const d=getDay(cur);d.goals.push('New goal');d.progress.push(0);openModal(cur)};$('#saveDay').onclick=()=>{save();render();modal.classList.add('hidden')};$('#resetDay').onclick=()=>{if(!cur)return;if(confirm('Reset this day?')){state.data[cur]={goals:[...DEFAULT_GOALS],progress:Array(5).fill(0)};save();render();modal.classList.add('hidden')}};$('#prevMonth').onclick=()=>{state.view.month--;if(state.view.month<0){state.view.month=11;state.view.year--;}render()};$('#nextMonth').onclick=()=>{state.view.month++;if(state.view.month>11){state.view.month=0;state.view.year++;}render()};load();render();/* GIST backup */async function api(p,m='GET',t,b){const h={'Accept':'application/vnd.github.v3+json'};if(t)h['Authorization']='token '+t;const r=await fetch('https://api.github.com'+p,{method:m,headers:h,body:b?JSON.stringify(b):undefined});if(!r.ok)throw new Error(await r.text());return r.json()}function status(m){$('#gistStatus').textContent=m}$('#createGist').onclick=async()=>{const t=$('#gistToken').value.trim();if(!t)return alert('Token needed');status('Creating gist...');try{const b={description:'Daily Flame Tracker backup',public:false,files:{'daily-flame.json':{content:JSON.stringify({data:state.data},null,2)}}};const j=await api('/gists','POST',t,b);$('#gistId').value=j.id;status('Created gist '+j.id)}catch(e){alert('Error: '+e.message);status('Failed')}};$('#pushGist').onclick=async()=>{const t=$('#gistToken').value.trim(),id=$('#gistId').value.trim();if(!t||!id)return alert('Token and gist id needed');status('Pushing...');try{await api('/gists/'+id,'PATCH',t,{files:{'daily-flame.json':{content:JSON.stringify({data:state.data},null,2)}}});status('Push done')}catch(e){alert('Push failed '+e.message);status('Error')}};$('#loadGist').onclick=async()=>{const t=$('#gistToken').value.trim(),id=$('#gistId').value.trim();if(!t||!id)return alert('Token and gist id needed');status('Loading...');try{const j=await api('/gists/'+id,'GET',t);const f=j.files['daily-flame.json'];if(!f)return alert('No file in gist');const d=JSON.parse(f.content);if(d.data){state.data=Object.assign({},state.data,d.data);save();render();status('Loaded from gist')}}catch(e){alert('Load failed '+e.message);status('Error')}};
